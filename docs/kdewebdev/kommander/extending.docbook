<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="extending">
<chapterinfo>
<title
>&kommander; erweitern</title>
<authorgroup>
<author
><firstname
></firstname
> <surname
></surname
> </author>

<othercredit role="translator"
><firstname
>Georg</firstname
><surname
>Schuster</surname
><affiliation
><address
><email
>gschuster@utanet.at</email
></address
></affiliation
><contrib
>Deutsche Übersetzung</contrib
></othercredit
> 

</authorgroup>
</chapterinfo>

<title
>&kommander; erweitern</title>

<!-- (OPTIONAL, BUT RECOMMENDED) This chapter should list all of the
application windows and their menubar and toolbar commands for easy reference.
Also include any keys that have a special function but have no equivalent in the
menus or toolbars. This may not be necessary for small apps or apps with no tool
or menu bars. -->

<sect1 id="create-widgets">
<title
>&kommander;-Bedienelemente erstellen</title>
<para
>Mit &kommander; können neue Bedienelemente basierend auf nicht-&kommander;-Bedienelementen recht leicht erstellt werden. Der Zugang ist das Ableiten neuer &kommander;-Bedienelemente-Klassen von &Qt;/&kde;-Bedienelementen und zusätzlich von der KommanderWidget-Klasse. Durch Überschreiben der Methoden dieser Klasse erhält das &kommander;-Bedienelement seine Funktionalität. </para>
<para
>Der meiste Quelltext von &kommander;-Bedienelementen ist Vorlagen-Quelltext. So kann der &kommander;-Dialog widgetgenerator.kmdr zum Generieren des meisten Quelltextes für &kommander;-Bedienelemente verwendet werden. Es genügt, die wichtigen Teile bezüglich des Bedienelementes, wie Status-Information, Bedienelement-Text &etc; auszufüllen. </para>
<para
>Angenommen, es soll ein neues Zeileneingabefeld-Bedienelement für &kommander;, abgeleitet vom &kde;-KLineEdit Bedienelement, erstellt werden. Mit dem &kommander;-Bedienelement Erstellungssdialog erhalten wir dies in der ausgegebenen Header-Datei: </para>
</sect1>

</chapter>
