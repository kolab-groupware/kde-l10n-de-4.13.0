<?xml version="1.0"  encoding="UTF-8" ?>

<chapter id="introduction">
<chapterinfo>
<title
>Einführung</title>
<authorgroup>
<author
><firstname
>Eric</firstname
> <surname
>Laffoon</surname
> <affiliation
> <address
><email
>sequitur@kde.org</email
></address>
</affiliation>
</author>

<othercredit role="translator"
><firstname
>Georg</firstname
><surname
>Schuster</surname
><affiliation
><address
><email
>gschuster@utanet.at</email
></address
></affiliation
><contrib
>Deutsche Übersetzung</contrib
></othercredit
> 

</authorgroup>
</chapterinfo>

<title
>Einführung</title>

<para
>&kommander; ist ein grafisches Dialog-Erstellungswerkzeug, das auch volle Fensteranwendungen erstellen kann. Das Hauptziel ist, so viel Funktionalität wie möglich zu bieten, ohne dass eine Skriptsprache benutzt werden muss. Das wird mit folgenden Möglichkeiten erreicht: </para>

<itemizedlist>


<listitem
><para
>Anweisungen werden mit einem <quote
>@</quote
> eingeleitet, wie z. B. @widgetText. Sie haben besondere Fähigkeiten, wie Wert eines Bedienelementes bestimmen, Alias, globale Variable, Funktionen und mehr.</para
></listitem>


<listitem
><para
>&DCOP;-Integration erlaubt &kommander;-Dialogen die Steuerung und auch die Reaktion auf Interaktionen mit anderen &kde;-Anwendungen. Das ist eine sehr leistungsfähige Funktionalität!</para
></listitem>

<listitem
><para
>Signale und Slots sind weniger intuitiv für neue Benutzer. Wie die Vorgangsweise dazu im ersten großen Release sein wird, wird noch geprüft. Derzeit wird ein begrenztes Ereignismodell für Schaltflächen oder Bedienelementänderungen geboten. Kombiniert mit <quote
>Population Text</quote
> ist auch dies sehr leistungsfähig.</para
></listitem>
</itemizedlist>

<para
>Die Kernfähigkeit von &kommander;-Dialogen ist die Bindung von Text (&kommander;-Text) an ein Bedienelement. Wenn es @Bedienelement1 und @Bedienelement2 gibt und sie Eingabefelder sind, kann &kommander; zur Anzeige ihres Inhaltes mittels @widgetText in ihrem &kommander;-Textbereich gebracht werden. Gibt man Hallo in @Bedienelement1 und Welt in @Bedienelement2 ein, kann eine Schaltfläche mit dem Inhalt <quote
>Meine erstes @Bedienelement1 @Bedienelement2 Programm</quote
>, von der Konsole gestartet, Mein erstes Hallo Welt Programm anzeigen </para>

<para
>Hoffentlich wird daraus schon das enorme Potential sichtbar. &kommander; ermöglicht ein viel schnelleres Entwicklungsmodell für einfache Anwendungen, weil nicht eine Programmiersprache, sondern ein natürliches Konzeptmodell zu Grunde liegt. Computersprachen liegen als Schicht zwischen Konzept und Implementation und machen Dinge machmal schwierig. &kommander; versucht, diese Schicht zu minimieren. </para>

<para
>&kommander; ist so weit wie möglich auf Standards aufgebaut. Es nützt das &Qt;-Entwicklungsmodell und erstellt *.ui Dateien, die es zu *.kmdr umbenennt. Es kann jedes &kde;-Bedienelement mit Hilfe von Plugins importieren. </para>

<para
>&kommander;s anderer hervorstechender Faktor ist die Art, mit dem Erfordernis einer Sprache umzugehen. Programmiersprachen sind wunderbar, haben aber die Tendenz, eigene Dogmas zu verlangen und ihre Anhänger suchen oft einen Zugang zu &GUI;-Gestaltung in einer integrierten Entwicklungsumgebung. Dennoch ist die Akzeptanz solcher &IDE;s auf Leute beschränkt, die diese Sprache für bestimmte gewünschte Möglichkeiten brauchen. Es ist aber unvernünftig zu erwarten, dass die Leute ein Duzend Sprachen akzeptieren, um alle Möglichkeiten zu haben. &kommander;-Dialoge sind sprachneutral und in jeder Skriptsprache erweiterbar und verhelfen &kommander; in eine einmalige Position für weite Verbreitung. Es können einem Dialog viele Skriptsprachen gleichzeitig verwendet werden und die Anwendungen können von anderen Leuten mit anderer als des ursprünglichen Entwicklers Skriptsprache schrittweise konvertiert und erweitert werden. Neue Bedienelemente und Möglichkeiten können sofort von allen verfügbaren Sprachen benutzt werden. </para>

<para
>Wir hoffen, dass &kommander; von der Entwicklergemeinde in seinem Wert erkannt und unterstützt wird, damit das Potential, das es bietet, nutzbar wird. Unser Ziel ist, &kommander; nützlich für den Anfänger zum Ausbauen und Verbinden seiner Anwendungen zu machen und gleichzeitig sollte es ein gutes Prototyping-Werkzeug werden. Es leistet das Versprechen von Open Source in ganz neuer Art. Die Leute können unsere GPL-Programme erweitern, aber nur sehr wenige haben die Fähigkeiten dazu. Mit &kommander; gibt es nun einen beträchtlichen Vervielfältiger. Wir nutzten es schon in &quantaplus; für Bereiche, in denen wir Erweiterbarkeit wünschen. </para>

<para
>Wir hoffen, Sie erfreuen sich an &kommander;. Bitte helfen Sie durch Fehlerberichte und Beispieldialoge ebenso wie mit Verbesserungsvorschlägen. Sie sind eingeladen, auf unserer Benutzerliste für Hilfe bei der Entwicklung von &kommander;-Anwendungen http://mail.kdewebdev.org/mailman/listinfo/kommander teilzunehmen </para>

<para
>Beste Grüsse vom &kommander;-Entwickler Team!</para>

</chapter>
